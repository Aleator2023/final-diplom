import React, { useState, useEffect } from 'react';
import axios from 'axios';

interface Booking {
  _id: string;
  user: { name: string; surname?: string };
  hotel?: { _id: string; title: string } | null;
  room?: { _id: string; title: string } | null;
  dateStart: string;
  dateEnd: string;
}

const ManagerBookings: React.FC = () => {
  const [bookings, setBookings] = useState<Booking[]>([]);
  const [loading, setLoading] = useState<boolean>(true);
  const [error, setError] = useState<string | null>(null);

  useEffect(() => {
    fetchBookings();
  }, []);

  const fetchBookings = async () => {
    try {
      const response = await axios.get<Booking[]>('http://localhost:3000/reservations');
      const normalizedBookings = response.data.map((booking) => ({
        ...booking,
        _id: booking.id, // ‚úÖ –ü—Ä–∏—Å–≤–∞–∏–≤–∞–µ–º `id` –≤ `_id`
      }));
  
      console.log("üì• –ó–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è:", normalizedBookings);
      setBookings(normalizedBookings); 
    } catch (err) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π:', err);
      setError('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è.');
    } finally {
      setLoading(false);
    }
  };

  const handleDelete = async (bookingId: string) => {
    try {
      await axios.delete(`http://localhost:3000/reservations/${bookingId}`);
      setBookings((prevBookings) => prevBookings.filter((booking) => booking._id !== bookingId));
    } catch (err) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è:', err);
      setError('–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ.');
    }
  };

  if (loading) return <p>–ó–∞–≥—Ä—É–∑–∫–∞...</p>;
  if (error) return <p className="error-message">{error}</p>;
  if (bookings.length === 0) return <p>–ù–µ—Ç –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π.</p>;

  return (
    <div className="bookings-container">
      <h2>–í—Å–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è</h2>
      <ul className="bookings-list">
        {bookings.map((booking) => (
          <li key={booking._id} className="booking-item">
            {booking.hotel && booking.room ? (
              <>
                <h3>{booking.hotel.title} - {booking.room.title}</h3>
                <p>–î–∞—Ç–∞ –∑–∞–µ–∑–¥–∞: {new Date(booking.dateStart).toLocaleDateString()}</p>
                <p>–î–∞—Ç–∞ –≤—ã–µ–∑–¥–∞: {new Date(booking.dateEnd).toLocaleDateString()}</p>
                <p>–ö–ª–∏–µ–Ω—Ç ID: {booking.user.name}</p>
                <button className="delete-button" onClick={() => {
  console.log(`üóë –ù–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –¥–ª—è –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è ID:`, booking._id);
  handleDelete(booking._id);
}}>
  –£–¥–∞–ª–∏—Ç—å
</button>
              </>
            ) : (
              <p className="error-message">–û—à–∏–±–∫–∞: –¥–∞–Ω–Ω—ã–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –ø–æ–≤—Ä–µ–∂–¥–µ–Ω—ã.</p>
            )}
          </li>
        ))}
      </ul>
    </div>
  );
};

export default ManagerBookings;