import { Controller, Get, Post, Delete, Param, Body, Query, NotFoundException } from '@nestjs/common';
import { ReservationsService } from './reservations.service';
import { ReservationDto, ReservationSearchOptions } from './reservation-interfaces';
import { Reservation } from '../schemas/reservation.schema';

@Controller('reservations')
export class ReservationsController {
  constructor(private readonly reservationsService: ReservationsService) {}

  // –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
  @Post()
  async addReservation(@Body() data: ReservationDto): Promise<Reservation> {
    console.log("üì• –ü–æ–ª—É—á–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ –¥–ª—è –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è:", data);
    return this.reservationsService.addReservation(data);
  }

  // –£–¥–∞–ª–µ–Ω–∏–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –ø–æ ID
  @Delete(':id')
  async removeReservation(@Param('id') id: string): Promise<void> {
    return this.reservationsService.removeReservation(id);
  }

  // –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π —Å —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–µ–π
  @Get()
  async getReservations(@Query() filter: ReservationSearchOptions): Promise<Array<Reservation>> {
    console.log("üîç –§–∏–ª—å—Ç—Ä userId:", filter.userId); // –õ–æ–≥–∏—Ä—É–µ–º userId, –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–∏—à–µ–ª —Å —Ñ—Ä–æ–Ω—Ç–∞
    return this.reservationsService.getReservations(filter);
  }
}