import React, { useState, useEffect } from 'react';
import { useParams, useNavigate } from 'react-router-dom';
import axios from 'axios';
import Slider from "react-slick";
import "slick-carousel/slick/slick.css";
import "slick-carousel/slick/slick-theme.css";
import '../styles/AllHotelsPage.css';

interface Hotel {
  _id: string;
  title: string;
  description: string;
  images?: string[];
}

interface HotelRoom {
  _id: string;
  title: string;
  description: string;
  price: number;
  images?: string[];
}

const ClientHotelPage: React.FC = () => {
  const { hotelId } = useParams();
  const navigate = useNavigate();
  const [hotel, setHotel] = useState<Hotel | null>(null);
  const [rooms, setRooms] = useState<HotelRoom[]>([]);
  const [error, setError] = useState<string | null>(null);
  const [loading, setLoading] = useState<boolean>(false);

  useEffect(() => {
    if (!hotelId) return; // –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –ª–∏—à–Ω–∏—Ö –∑–∞–ø—Ä–æ—Å–æ–≤

    console.log("üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º hotelId:", hotelId);

    const fetchHotelData = async () => {
      try {
        setLoading(true);

        // 1Ô∏è‚É£ –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –æ—Ç–µ–ª—å
        const hotelResponse = await axios.get<Hotel>(`http://localhost:3000/hotels/${hotelId}`);
        setHotel(hotelResponse.data);

        // 2Ô∏è‚É£ –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –Ω–æ–º–µ—Ä–∞
        const roomsResponse = await axios.get<HotelRoom[]>(`http://localhost:3000/hotels/${hotelId}/rooms`);

        // 3Ô∏è‚É£ –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª–Ω—ã–π –ø—É—Ç—å –∫ –∫–∞—Ä—Ç–∏–Ω–∫–∞–º
        const roomsWithFullImages = roomsResponse.data.map((room) => ({
          ...room,
          images: room.images?.map(img => img.startsWith('http') ? img : `http://localhost:3000/${img}`) || [],
        }));

        setRooms(roomsWithFullImages);
      } catch (err: any) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–∞–Ω–Ω—ã—Ö:', err);
        setError(err.response?.data?.message || '–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–∞–Ω–Ω—ã—Ö');
      } finally {
        setLoading(false);
      }
    };

    fetchHotelData();
  }, [hotelId]);

  const handleBookingClick = (roomId: string) => {
    navigate(`/client/book-room/${roomId}`); // ‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π –ø—É—Ç—å
  };

  const sliderSettings = {
    dots: true,
    infinite: true,
    speed: 500,
    slidesToShow: 1,
    slidesToScroll: 1,
    adaptiveHeight: true,
  };

  if (loading) return <p>–ó–∞–≥—Ä—É–∑–∫–∞...</p>;
  if (error) return <p className="error-message">{error}</p>;
  if (!hotel) return <p>–ì–æ—Å—Ç–∏–Ω–∏—Ü–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞</p>;

  return (
    <div className="hotel-container">
      {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≥–æ—Å—Ç–∏–Ω–∏—Ü–µ */}
      {hotel.images && hotel.images.length > 0 && (
        <Slider {...sliderSettings} className="hotel-slider">
          {hotel.images.map((img, index) => (
            <div key={index}>
              <img src={img} alt={`–ì–æ—Å—Ç–∏–Ω–∏—Ü–∞ ${hotel.title}`} className="hotel-image" />
            </div>
          ))}
        </Slider>
      )}

      <div className="hotel-info">
        <h1>{hotel.title}</h1>
        <p>{hotel.description}</p>
      </div>

      {/* –°–ø–∏—Å–æ–∫ –Ω–æ–º–µ—Ä–æ–≤ */}
      {rooms.length > 0 && <h2>–î–æ—Å—Ç—É–ø–Ω—ã–µ –Ω–æ–º–µ—Ä–∞</h2>}
      <div className="hotel-rooms">
        {rooms.length > 0 ? (
          rooms.map((room) => (
            <div key={room._id} className="room-card">
              {room.images && room.images.length > 0 && (
                <Slider {...sliderSettings} className="room-slider">
                  {room.images.map((img, index) => (
                    <div key={index}>
                      <img src={img} alt={`–ù–æ–º–µ—Ä ${room.title}`} className="room-image" />
                    </div>
                  ))}
                </Slider>
              )}
              <h3>{room.title}</h3>
              <p>{room.description}</p>
              <p className="room-price">–¶–µ–Ω–∞: {room.price}‚ÇΩ</p>
              <button className="book-button" onClick={() => handleBookingClick(room._id)}>
                –ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å
              </button>
            </div>
          ))
        ) : (
          <p>–ù–æ–º–µ—Ä–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç</p>
        )}
      </div>
    </div>
  );
};

export default ClientHotelPage;